{"version":3,"sources":["components/Navbar/Navbar.js","components/SearchField/Filters.js","components/CountryCard/CountryCard.js","components/CountryCards/CountryCards.js","components/ErrorBoundry.js","containers/Countries/Countries.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_free_regular_svg_icons__WEBPACK_IMPORTED_MODULE_2__","Navbar","a","createElement","className","icon","faMoon","transform","rotate","Filters","props","react_default","index_es","faSearch","onChange","searchChange","type","placeholder","react_select_browser_esm","classNamePrefix","value","selectedOption","options","handleCountryChange","CountryCard","react_router_dom","to","concat","name","src","img","alt","population","region","capital","CountryCards","countries","map","_ref","flag","components_CountryCard_CountryCard","key","toString","replace","ErrorBoundry","state","hasError","this","setState","children","Component","label","Countries","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","filter","target","error","isLoaded","_this2","fetch","then","resp","json","data","catch","err","filteredCountries","_this3","_this$state","country","toLowerCase","includes","components_CountryCards_CountryCards","Spinner","react","components_SearchField_Filters","components_ErrorBoundry"],"mappings":"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","file":"static/js/4.c1857085.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon } from '@fortawesome/free-regular-svg-icons'\nimport './Navbar.css';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className='container'>\n        <h2>Where in the world?</h2>\n        <p>\n          <FontAwesomeIcon icon={faMoon} className='iconMoon' transform={{ rotate: -20 }} /> Dark Mode\n        </p>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './Filters.css';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst Filters = props => {\n    return (\n      <div className='input-container'>\n        <FontAwesomeIcon className='icon' icon={faSearch} />\n        <input\n          onChange={props.searchChange}\n          type='text'\n          placeholder='Search for a country...'\n        />\n        <Select\n          classNamePrefix='Select'\n          className='select'\n          value={props.selectedOption}\n          options={props.options}\n          onChange={props.handleCountryChange}\n          placeholder='Filter by Region'\n        />\n      </div>\n    );\n}\n\nexport default Filters;\n","import React from 'react';\nimport './CountryCard.css';\nimport { Link } from 'react-router-dom';\n\nconst CountryCard = props => {\n  return (\n    <div className='country-card'>\n    <Link\n      className=\"link\" \n      to={`/countries/${props.name}`}\n    >\n      <img src={props.img} alt='text' />\n      <div className='info'>\n        <h3>{props.name}</h3>\n        <ul>\n          <li>\n            <span>Population</span>: {props.population}\n          </li>\n          <li>\n            <span>Region</span>: {props.region}\n          </li>\n          <li>\n            <span>Capital</span>: {props.capital}\n          </li>\n        </ul>\n      </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CountryCard;\n","import React from 'react';\nimport './CountryCards.css';\nimport CountryCard from '../CountryCard/CountryCard';\n\nconst CountryCards = props => {\n  return (\n    <div className='grid'>\n      {props.countries.map(({ flag, name, population, region, capital }) => {\n        return (\n          <CountryCard\n            img={flag}\n            key={name}\n            name={name}\n            population={population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            region={region}\n            capital={capital}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CountryCards;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h2>Something went wrong</h2>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component, Fragment } from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Filters from '../../components/SearchField/Filters';\nimport CountryCards from '../../components/CountryCards/CountryCards';\nimport ErrorBoundry from '../../components/ErrorBoundry';\nimport Spinner from '../../components/Spinner/Spinner';\n\nconst options = [\n  { value: 'all', label: 'All Countries' },\n  { value: 'Africa', label: 'Africa' },\n  { value: 'Americas', label: 'America' },\n  { value: 'Asia', label: 'Asia' },\n  { value: 'Europe', label: 'Europe' },\n  { value: 'Oceania', label: 'Oceania' }\n];\n\nclass Countries extends Component {\n    constructor(props){\n      super(props)\n      \n      this.state = {\n        countries: [],\n        filter: '',\n        error: null,\n        isLoaded: false,\n        selectedOption: { value: 'all', label: 'All countries' },\n      };\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.com/v2/all?fields=name,capital,population,region,flag';\n    fetch(url)\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          countries: data,\n          isLoaded: true\n        })\n      )\n      .catch(err =>\n        this.setState({\n          error: true\n        })\n      );\n  }\n\n  handleChange = e => {\n    try {\n      this.setState({\n        filter: e.target.value\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n  handleCountryChange = selectedOption => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    const { filter, error, isLoaded, selectedOption } = this.state;\n    let filteredCountries;\n    filteredCountries = this.state.countries.filter(country => {\n      if(selectedOption['value'] !== 'all'){\n        return country.region === selectedOption['value'];\n      } else {\n        return filteredCountries = this.state.countries\n      }\n    })\n\n    filteredCountries = filteredCountries.filter(country => {\n        return country.name.toLowerCase().includes(filter.toLowerCase());\n    });\n\n    let countries;\n    !isLoaded\n      ? (countries = <Spinner />)\n      : (countries = <CountryCards countries={filteredCountries} />);\n\n    if (error) {\n      return <h1>Error: Something went wrong</h1>;\n    } else {\n      return (\n        <Fragment>\n          <Navbar />\n          <Filters\n            searchChange={this.handleChange}\n            handleCountryChange={this.handleCountryChange}\n            selectedOption={this.state.selectedOption}\n            options={options}\n          />\n          <ErrorBoundry>{countries}</ErrorBoundry>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default Countries;\n"],"sourceRoot":""}