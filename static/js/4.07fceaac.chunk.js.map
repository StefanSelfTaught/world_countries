{"version":3,"sources":["components/Navbar/Navbar.js","components/SearchField/Filters.js","components/CountryCard/CountryCard.js","components/CountryCards/CountryCards.js","components/ErrorBoundry.js","containers/Countries/Countries.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_free_regular_svg_icons__WEBPACK_IMPORTED_MODULE_2__","Navbar","a","createElement","className","icon","faMoon","transform","rotate","Filters","props","react_default","index_es","faSearch","onChange","searchChange","type","placeholder","react_select_browser_esm","classNamePrefix","value","selectedOption","options","handleCountryChange","CountryCard","react_router_dom","to","concat","name","src","img","alt","population","region","capital","CountryCards","countries","map","_ref","flag","components_CountryCard_CountryCard","key","toString","replace","ErrorBoundry","state","hasError","this","setState","children","Component","label","Countries","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","filter","target","error","isLoaded","_this2","fetch","then","resp","json","data","catch","err","filteredCountries","_this3","_this$state","country","toLowerCase","includes","components_CountryCards_CountryCards","Spinner","react","components_SearchField_Filters","components_ErrorBoundry"],"mappings":"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","file":"static/js/4.07fceaac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMoon } from '@fortawesome/free-regular-svg-icons'\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className='container'>\r\n        <h2>Where in the world?</h2>\r\n        <p>\r\n          <FontAwesomeIcon icon={faMoon} className='iconMoon' transform={{ rotate: -20 }} /> Dark Mode\r\n        </p>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Filters.css';\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Filters = props => {\r\n    return (\r\n      <div className='input-container'>\r\n        <FontAwesomeIcon className='icon' icon={faSearch} />\r\n        <input\r\n          onChange={props.searchChange}\r\n          type='text'\r\n          placeholder='Search for a country...'\r\n        />\r\n        <Select\r\n          classNamePrefix='Select'\r\n          className='select'\r\n          value={props.selectedOption}\r\n          options={props.options}\r\n          onChange={props.handleCountryChange}\r\n          placeholder='Filter by Region'\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport './CountryCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CountryCard = props => {\r\n  return (\r\n    <div className='country-card'>\r\n    <Link\r\n      className=\"link\" \r\n      to={`/countries/${props.name}`}\r\n    >\r\n      <img src={props.img} alt='text' />\r\n      <div className='info'>\r\n        <h3>{props.name}</h3>\r\n        <ul>\r\n          <li>\r\n            <span>Population</span>: {props.population}\r\n          </li>\r\n          <li>\r\n            <span>Region</span>: {props.region}\r\n          </li>\r\n          <li>\r\n            <span>Capital</span>: {props.capital}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from 'react';\r\nimport './CountryCards.css';\r\nimport CountryCard from '../CountryCard/CountryCard';\r\n\r\nconst CountryCards = props => {\r\n  return (\r\n    <div className='grid'>\r\n      {props.countries.map(({ flag, name, population, region, capital }) => {\r\n        return (\r\n          <CountryCard\r\n            img={flag}\r\n            key={name}\r\n            name={name}\r\n            population={population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n            region={region}\r\n            capital={capital}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryCards;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h2>Something went wrong</h2>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Filters from '../../components/SearchField/Filters';\r\nimport CountryCards from '../../components/CountryCards/CountryCards';\r\nimport ErrorBoundry from '../../components/ErrorBoundry';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nconst options = [\r\n  { value: 'all', label: 'All Countries' },\r\n  { value: 'Africa', label: 'Africa' },\r\n  { value: 'Americas', label: 'America' },\r\n  { value: 'Asia', label: 'Asia' },\r\n  { value: 'Europe', label: 'Europe' },\r\n  { value: 'Oceania', label: 'Oceania' }\r\n];\r\n\r\nclass Countries extends Component {\r\n    constructor(props){\r\n      super(props)\r\n      \r\n      this.state = {\r\n        countries: [],\r\n        filter: '',\r\n        error: null,\r\n        isLoaded: false,\r\n        selectedOption: { value: 'all', label: 'All countries' },\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = 'https://restcountries.eu/rest/v2/all?fields=name;capital;population;region;flag';\r\n    fetch(url)\r\n      .then(resp => resp.json())\r\n      .then(data =>\r\n        this.setState({\r\n          countries: data,\r\n          isLoaded: true\r\n        })\r\n      )\r\n      .catch(err =>\r\n        this.setState({\r\n          error: true\r\n        })\r\n      );\r\n  }\r\n\r\n  handleChange = e => {\r\n    try {\r\n      this.setState({\r\n        filter: e.target.value\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCountryChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n  };\r\n\r\n  render() {\r\n    const { filter, error, isLoaded, selectedOption } = this.state;\r\n    let filteredCountries;\r\n    filteredCountries = this.state.countries.filter(country => {\r\n      if(selectedOption['value'] !== 'all'){\r\n        return country.region === selectedOption['value'];\r\n      } else {\r\n        return filteredCountries = this.state.countries\r\n      }\r\n    })\r\n\r\n    filteredCountries = filteredCountries.filter(country => {\r\n        return country.name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n\r\n    let countries;\r\n    !isLoaded\r\n      ? (countries = <Spinner />)\r\n      : (countries = <CountryCards countries={filteredCountries} />);\r\n\r\n    if (error) {\r\n      return <h1>Error: Something went wrong</h1>;\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Navbar />\r\n          <Filters\r\n            searchChange={this.handleChange}\r\n            handleCountryChange={this.handleCountryChange}\r\n            selectedOption={this.state.selectedOption}\r\n            options={options}\r\n          />\r\n          <ErrorBoundry>{countries}</ErrorBoundry>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n"],"sourceRoot":""}